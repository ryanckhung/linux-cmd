# copy local file to remote server
scp localfile.tar developer@10.6.72.58:/home/developer/ryan
scp <localfile> <username>@<IP>:<DestinationFullPath>

# cerate a user with a home directory and bash as shell
sudo useradd -m -d /home/test04/ -s /bin/bash test04
sudo passwd test04 
# -m creates the home directory if it does not exist.
# -d overrides the default home directory location. -s sets the login shell for the user.
# add the user to the sudo list
sudo usermod -aG sudo test04


# for restricted account use /bin/rbash which will limit it to work on the user home directory only
sudo useradd -m -d /home/test04/ -s /bin/rbash test04

#force the user to udpate the password during the next login
sudo chage -d 0 test04

# user list store in
/ect/passwd

# install docker
sudo apt-get install docker.io
sudo systemctl start docker

# find file under the current directory and it's subfolder
find . -name hello.txt

A filesystem is the methods and data structures that an operating system uses to keep track of files on a disk or partition; that is, the way the files are organized on the disk. The word is also used to refer to a partition or disk that is used to store the files or the type of the filesystem. Thus, one might say ``I have two filesystems'' meaning one has two partitions on which one stores files, or that one is using the ``extended filesystem'', meaning the type of the filesystem.

#wildcard
* - represents zero or more characters 
? - represents a single character
[] - represents a range of characters
ls [abc]*      -> list all files start with a/b/c and following anything
ls [a-c]*      -> same as above "a-c" mean abc
ls [a-c][b-z]* -> first character is a-c, the next char is b-z, then follow anything
ls [a-cx-z]*.  -> first character is abcxyz, then follow anything
ls he??o*      -> list all files start with "he" then following any 2 characters then "o" then anything

# hard link and soft link
ln f1.txt f1_link.txt    -> hard link (the content of either one change, both files content change; if the original file is gone, the link file will still exist)
ln -s f2.txt f2_link.txt -> soft link (the content of either one change, both files content change; if the original file is gone, the link file will become broken)

# command
command option(s) argument(s)

# file permission
rwx - read, write, execute
ugo - user, group, other(public)
chmod ugo+r <filename>
chmod 444 <filename>
chown changes the ownership of a file
chgrp changes the group ownership of a file

# Help
whatis <command>   -> whatis ls
<command> –-help   -> ls -help 
man <command>      -> man ls

# Text Edit
vi
Redirect command output > or >> 
echo > or >>
ls -al > temp.txt    -> originally it is output to the sceen; but now the output is REDIRECTED to the file

# Pipe
command1 [arguments] | command2 [arguments]
ls -l | more

# File command
cp
rm
mv
mkdir
rmdir or rm -r
chgrp
chown

# Display command
• cat • more • less • head • tail (more/less/head/tail are only useful for long files only)
